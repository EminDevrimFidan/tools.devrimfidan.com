name: Update Tools JSON

on:
  issues:
    types: [opened]

jobs:
  update-json:
    if: contains(github.event.issue.labels.*.name, 'enhancement')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse Issue and Update JSON
        run: |
          # Parse the issue body
          NAME=$(echo '${{ github.event.issue.body }}' | grep -i "**Tool Name**:" | cut -d ':' -f 2- | xargs)
          URL=$(echo '${{ github.event.issue.body }}' | grep -i "**Website**:" | cut -d ':' -f 2- | xargs)
          DESCRIPTION=$(echo '${{ github.event.issue.body }}' | grep -i "**Description**:" | cut -d ':' -f 2- | xargs)
          CATEGORIES=$(echo '${{ github.event.issue.body }}' | grep -i "**Categories**:" | cut -d ':' -f 2- | sed 's/\[//g' | sed 's/\]//g' | tr ',' '\n' | jq -R -s -c 'split("\n")[:-1] | map(select(length > 0)) | map(trim)')
          RATING=$(echo '${{ github.event.issue.body }}' | grep -i "**Rating**:" | cut -d ':' -f 2- | sed 's/\[//g' | sed 's/\]//g' | xargs)
          PRICING=$(echo '${{ github.event.issue.body }}' | grep -i "**Pricing**:" | cut -d ':' -f 2- | sed 's/\[//g' | sed 's/\]//g' | xargs)
          
          # Update JSON file
          jq --arg name "$NAME" \
             --arg url "$URL" \
             --arg description "$DESCRIPTION" \
             --argjson categories "$CATEGORIES" \
             --argjson rating "$RATING" \
             --arg pricing "$PRICING" \
             '.tools += [{
               name: $name,
               url: $url,
               description: $description,
               categories: $categories,
               rating: $rating,
               pricing: $pricing
             }]' data/tools.json > data/tools_updated.json
          
          mv data/tools_updated.json data/tools.json

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add data/tools.json
          git commit -m "Add tool: $NAME"
          git push

      - name: Comment and close issue
        uses: actions/github-script@v6
        with:
          script: |
            // Add success comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '✅ Tool has been successfully added to the database!'
            });
            
            // Close the issue
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              state: 'closed'
            });

      - name: Handle Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '❌ Error: Failed to add tool. Please check if all required fields are filled correctly.'
            });